buildscript {
    ext.kotlin_version = '1.2.21'
    ext.anko_version = '0.10.1'
    ext.dokka_version = '0.9.15'
    ext.android_support_version = '27.0.2'
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:2.1.0"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        // classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.3.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'org.jetbrains.dokka'
// apply plugin: 'com.getkeepsafe.dexcount'

androidExtensions {
    experimental = true
}

android {
    buildToolsVersion "27.0.3"
    compileSdkVersion 27


		lintOptions {
				disable 'InvalidPackage', 'MissingTranslation'
		}

    //noinspection GroovyMissingReturnStatement
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    defaultConfig {
        versionName '10.0.0'
        versionCode 3062
	    minSdkVersion 21
        applicationId 'nl.mpcjanssen.simpletask.tw'
        manifestPlaceholders = [ providerFlavour:"tw"]
        targetSdkVersion 27
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias = "mpcjanssen.nl"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            manifestPlaceholders = [providerBuildType: "debug"]
        }
        release {
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFile "proguard.txt"
            manifestPlaceholders = [providerBuildType: "release"]
        }
    }
    dexOptions {
        preDexLibraries = true
        javaMaxHeapSize "3g"
        dexInProcess = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "org.jetbrains.anko:anko-commons:$anko_version"
    // Anko Layouts
    compile "org.jetbrains.anko:anko-sdk25:$anko_version" // sdk15, sdk19, sdk21, sdk23 are also available
    compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    // Coroutine listeners for Anko Layouts
    compile "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    compile "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"

    compile "com.android.support:support-v4:$android_support_version"
    compile "com.android.support:design:$android_support_version"
    compile "com.android.support:appcompat-v7:$android_support_version"
    compile "com.android.support:recyclerview-v7:$android_support_version"
    compile 'com.atlassian.commonmark:commonmark:0.8.0'
    compile 'com.darwinsys:hirondelle-date4j:1.5.1'
    compile 'me.smichel.android:kpreferences:0.11.1'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile('com.android.support.test:runner:0.5') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

// Only sign if we have keystore properties in the gradle.properties in ~/.gradle
if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

dokka {
    outputFormat = 'gfm'
    outputDirectory = "$projectDir/../doc"
    sourceDirs = files('src/main/java/nl/mpcjanssen ')

}
